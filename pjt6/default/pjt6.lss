
pjt6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800200  000008fa  0000098e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000109  00800232  00800232  000009c0  2**0
                  ALLOC
  3 .stab         00000c9c  00000000  00000000  000009c0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000001b6  00000000  00000000  0000165c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00001818  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001197  00000000  00000000  000019b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000080b  00000000  00000000  00002b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b36  00000000  00000000  0000335a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00003e90  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000033a  00000000  00000000  00004108  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ff  00000000  00000000  00004442  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00004e41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
   c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  10:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  14:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  18:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  1c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  20:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  24:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  28:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  2c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  30:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  34:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  38:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  3c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  40:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  44:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  48:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  4c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  50:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  54:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  58:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  5c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  60:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  64:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  68:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  6c:	0c 94 02 01 	jmp	0x204	; 0x204 <__vector_27>
  70:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  74:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  78:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  7c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  80:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  84:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  88:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  8c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  90:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  94:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  98:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  9c:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  a8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  ac:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  b8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  bc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  c8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  cc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d4:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  d8:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  dc:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>
  e0:	0c 94 94 00 	jmp	0x128	; 0x128 <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea ef       	ldi	r30, 0xFA	; 250
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a2 33       	cpi	r26, 0x32	; 50
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>
 10e:	1b be       	out	0x3b, r1	; 59

00000110 <__do_clear_bss>:
 110:	13 e0       	ldi	r17, 0x03	; 3
 112:	a2 e3       	ldi	r26, 0x32	; 50
 114:	b2 e0       	ldi	r27, 0x02	; 2
 116:	01 c0       	rjmp	.+2      	; 0x11a <.do_clear_bss_start>

00000118 <.do_clear_bss_loop>:
 118:	1d 92       	st	X+, r1

0000011a <.do_clear_bss_start>:
 11a:	ab 33       	cpi	r26, 0x3B	; 59
 11c:	b1 07       	cpc	r27, r17
 11e:	e1 f7       	brne	.-8      	; 0x118 <.do_clear_bss_loop>
 120:	0e 94 93 01 	call	0x326	; 0x326 <main>
 124:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <_exit>

00000128 <__bad_interrupt>:
 128:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012c <q_init>:
#define Q_SIZE 256

char q[Q_SIZE], f, r;
void q_init()
{
	f = r = 0;
 12c:	10 92 33 02 	sts	0x0233, r1
 130:	10 92 32 02 	sts	0x0232, r1
}
 134:	08 95       	ret

00000136 <q_insert>:
int q_insert(char ch)
{
	if((r + 1) % Q_SIZE == f)
 136:	20 91 33 02 	lds	r18, 0x0233
 13a:	2f 5f       	subi	r18, 0xFF	; 255
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	40 91 32 02 	lds	r20, 0x0232
 142:	50 e0       	ldi	r21, 0x00	; 0
 144:	24 17       	cp	r18, r20
 146:	35 07       	cpc	r19, r21
 148:	49 f0       	breq	.+18     	; 0x15c <q_insert+0x26>
		return 0;
	r = (r + 1) % Q_SIZE;
 14a:	20 93 33 02 	sts	0x0233, r18
	q[r] = ch;
 14e:	2c 5c       	subi	r18, 0xCC	; 204
 150:	3d 4f       	sbci	r19, 0xFD	; 253
 152:	f9 01       	movw	r30, r18
 154:	80 83       	st	Z, r24
	return 1;
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	08 95       	ret
	f = r = 0;
}
int q_insert(char ch)
{
	if((r + 1) % Q_SIZE == f)
		return 0;
 15c:	80 e0       	ldi	r24, 0x00	; 0
 15e:	90 e0       	ldi	r25, 0x00	; 0
	r = (r + 1) % Q_SIZE;
	q[r] = ch;
	return 1;
}
 160:	08 95       	ret

00000162 <q_delete>:
int q_delete()
{
	if (r == f)
 162:	80 91 32 02 	lds	r24, 0x0232
 166:	90 91 33 02 	lds	r25, 0x0233
 16a:	98 17       	cp	r25, r24
 16c:	51 f0       	breq	.+20     	; 0x182 <q_delete+0x20>
		return 0;
	f = (f + 1) % Q_SIZE;
 16e:	8f 5f       	subi	r24, 0xFF	; 255
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	80 93 32 02 	sts	0x0232, r24
	return q[f];
 176:	8c 5c       	subi	r24, 0xCC	; 204
 178:	9d 4f       	sbci	r25, 0xFD	; 253
 17a:	fc 01       	movw	r30, r24
 17c:	80 81       	ld	r24, Z
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	08 95       	ret
	return 1;
}
int q_delete()
{
	if (r == f)
		return 0;
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	90 e0       	ldi	r25, 0x00	; 0
	f = (f + 1) % Q_SIZE;
	return q[f];
}
 186:	08 95       	ret

00000188 <uart_putchar>:
	sbi(UCSR0A, U2X0);
	sbi(UCSR0B, TXEN0);
	sbi(UCSR0B, TXCIE0);
}
int uart_putchar(char ch, FILE *stream)
{
 188:	cf 93       	push	r28
 18a:	c8 2f       	mov	r28, r24
	if(ch == '\n')
 18c:	8a 30       	cpi	r24, 0x0A	; 10
 18e:	19 f4       	brne	.+6      	; 0x196 <uart_putchar+0xe>
		uart_putchar('\r', stream);
 190:	8d e0       	ldi	r24, 0x0D	; 13
 192:	0e 94 c4 00 	call	0x188	; 0x188 <uart_putchar>
	cli();
 196:	f8 94       	cli
	if(!uart_busy){
 198:	80 91 34 03 	lds	r24, 0x0334
 19c:	88 23       	and	r24, r24
 19e:	59 f4       	brne	.+22     	; 0x1b6 <uart_putchar+0x2e>
		UDR0 = ch;
 1a0:	c0 93 c6 00 	sts	0x00C6, r28
		uart_busy = 1;
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	80 93 34 03 	sts	0x0334, r24
 1aa:	0a c0       	rjmp	.+20     	; 0x1c0 <uart_putchar+0x38>
	}
	else {
		while(q_insert(ch) == 0){
			sei();
 1ac:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ae:	86 ef       	ldi	r24, 0xF6	; 246
 1b0:	8a 95       	dec	r24
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <uart_putchar+0x28>
			_delay_us(100);
			cli();
 1b4:	f8 94       	cli
	if(!uart_busy){
		UDR0 = ch;
		uart_busy = 1;
	}
	else {
		while(q_insert(ch) == 0){
 1b6:	8c 2f       	mov	r24, r28
 1b8:	0e 94 9b 00 	call	0x136	; 0x136 <q_insert>
 1bc:	00 97       	sbiw	r24, 0x00	; 0
 1be:	b1 f3       	breq	.-20     	; 0x1ac <uart_putchar+0x24>
			sei();
			_delay_us(100);
			cli();
		}
	}
	sei();
 1c0:	78 94       	sei
	return 1;
}
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	cf 91       	pop	r28
 1c8:	08 95       	ret

000001ca <uart_init>:
FILE Mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL,_FDEV_SETUP_WRITE);
char volatile uart_busy;

void uart_init()
{
	stdout = &Mystdout;
 1ca:	80 e0       	ldi	r24, 0x00	; 0
 1cc:	92 e0       	ldi	r25, 0x02	; 2
 1ce:	90 93 38 03 	sts	0x0338, r25
 1d2:	80 93 37 03 	sts	0x0337, r24
	uart_busy = 0;
 1d6:	10 92 34 03 	sts	0x0334, r1
	q_init();
 1da:	0e 94 96 00 	call	0x12c	; 0x12c <q_init>
	UBRR0H = 0x00; UBRR0L = 0x07;
 1de:	10 92 c5 00 	sts	0x00C5, r1
 1e2:	87 e0       	ldi	r24, 0x07	; 7
 1e4:	80 93 c4 00 	sts	0x00C4, r24
	sbi(UCSR0A, U2X0);
 1e8:	e0 ec       	ldi	r30, 0xC0	; 192
 1ea:	f0 e0       	ldi	r31, 0x00	; 0
 1ec:	80 81       	ld	r24, Z
 1ee:	82 60       	ori	r24, 0x02	; 2
 1f0:	80 83       	st	Z, r24
	sbi(UCSR0B, TXEN0);
 1f2:	e1 ec       	ldi	r30, 0xC1	; 193
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	88 60       	ori	r24, 0x08	; 8
 1fa:	80 83       	st	Z, r24
	sbi(UCSR0B, TXCIE0);
 1fc:	80 81       	ld	r24, Z
 1fe:	80 64       	ori	r24, 0x40	; 64
 200:	80 83       	st	Z, r24
}
 202:	08 95       	ret

00000204 <__vector_27>:
#include<avr/interrupt.h>
#include"queue.h"
extern char volatile uart_busy;
ISR(USART0_TX_vect)
{
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	0b b6       	in	r0, 0x3b	; 59
 20e:	0f 92       	push	r0
 210:	11 24       	eor	r1, r1
 212:	2f 93       	push	r18
 214:	3f 93       	push	r19
 216:	4f 93       	push	r20
 218:	5f 93       	push	r21
 21a:	6f 93       	push	r22
 21c:	7f 93       	push	r23
 21e:	8f 93       	push	r24
 220:	9f 93       	push	r25
 222:	af 93       	push	r26
 224:	bf 93       	push	r27
 226:	ef 93       	push	r30
 228:	ff 93       	push	r31
	char ch;

	if((ch = q_delete()) == 0)
 22a:	0e 94 b1 00 	call	0x162	; 0x162 <q_delete>
 22e:	88 23       	and	r24, r24
 230:	19 f4       	brne	.+6      	; 0x238 <__vector_27+0x34>
		uart_busy = 0;
 232:	10 92 34 03 	sts	0x0334, r1
 236:	02 c0       	rjmp	.+4      	; 0x23c <__vector_27+0x38>
	else
		UDR0 = ch;
 238:	80 93 c6 00 	sts	0x00C6, r24
}
 23c:	ff 91       	pop	r31
 23e:	ef 91       	pop	r30
 240:	bf 91       	pop	r27
 242:	af 91       	pop	r26
 244:	9f 91       	pop	r25
 246:	8f 91       	pop	r24
 248:	7f 91       	pop	r23
 24a:	6f 91       	pop	r22
 24c:	5f 91       	pop	r21
 24e:	4f 91       	pop	r20
 250:	3f 91       	pop	r19
 252:	2f 91       	pop	r18
 254:	0f 90       	pop	r0
 256:	0b be       	out	0x3b, r0	; 59
 258:	0f 90       	pop	r0
 25a:	0f be       	out	0x3f, r0	; 63
 25c:	0f 90       	pop	r0
 25e:	1f 90       	pop	r1
 260:	18 95       	reti

00000262 <is_prime>:
#include<stdio.h>

int is_prime(int n)
{
 262:	cf 93       	push	r28
 264:	df 93       	push	r29
 266:	fc 01       	movw	r30, r24
	int i;
	for(i = 2; i<=n/2; i++)
 268:	62 e0       	ldi	r22, 0x02	; 2
 26a:	70 e0       	ldi	r23, 0x00	; 0
 26c:	0e 94 9b 01 	call	0x336	; 0x336 <__divmodhi4>
 270:	eb 01       	movw	r28, r22
 272:	22 e0       	ldi	r18, 0x02	; 2
 274:	30 e0       	ldi	r19, 0x00	; 0
 276:	08 c0       	rjmp	.+16     	; 0x288 <is_prime+0x26>
		if((n%i) == 0)
 278:	cf 01       	movw	r24, r30
 27a:	b9 01       	movw	r22, r18
 27c:	0e 94 9b 01 	call	0x336	; 0x336 <__divmodhi4>
 280:	00 97       	sbiw	r24, 0x00	; 0
 282:	41 f0       	breq	.+16     	; 0x294 <is_prime+0x32>
#include<stdio.h>

int is_prime(int n)
{
	int i;
	for(i = 2; i<=n/2; i++)
 284:	2f 5f       	subi	r18, 0xFF	; 255
 286:	3f 4f       	sbci	r19, 0xFF	; 255
 288:	c2 17       	cp	r28, r18
 28a:	d3 07       	cpc	r29, r19
 28c:	ac f7       	brge	.-22     	; 0x278 <is_prime+0x16>
		if((n%i) == 0)
			return 0;
	return 1;
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <is_prime+0x36>
int is_prime(int n)
{
	int i;
	for(i = 2; i<=n/2; i++)
		if((n%i) == 0)
			return 0;
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e0       	ldi	r25, 0x00	; 0
	return 1;
}
 298:	df 91       	pop	r29
 29a:	cf 91       	pop	r28
 29c:	08 95       	ret

0000029e <app_prime>:
void app_prime(int t)
{
 29e:	cf 92       	push	r12
 2a0:	df 92       	push	r13
 2a2:	ef 92       	push	r14
 2a4:	ff 92       	push	r15
 2a6:	0f 93       	push	r16
 2a8:	1f 93       	push	r17
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	7c 01       	movw	r14, r24
	int n,count = 0;
 2b0:	00 e0       	ldi	r16, 0x00	; 0
 2b2:	10 e0       	ldi	r17, 0x00	; 0
	for(n = 2; n<= t; n++){
 2b4:	c2 e0       	ldi	r28, 0x02	; 2
 2b6:	d0 e0       	ldi	r29, 0x00	; 0
		if(is_prime(n)) {
			count++;
			printf("%d is a prime number !!!\n", n);
 2b8:	2e e0       	ldi	r18, 0x0E	; 14
 2ba:	c2 2e       	mov	r12, r18
 2bc:	22 e0       	ldi	r18, 0x02	; 2
 2be:	d2 2e       	mov	r13, r18
	return 1;
}
void app_prime(int t)
{
	int n,count = 0;
	for(n = 2; n<= t; n++){
 2c0:	16 c0       	rjmp	.+44     	; 0x2ee <app_prime+0x50>
		if(is_prime(n)) {
 2c2:	ce 01       	movw	r24, r28
 2c4:	0e 94 31 01 	call	0x262	; 0x262 <is_prime>
 2c8:	00 97       	sbiw	r24, 0x00	; 0
 2ca:	81 f0       	breq	.+32     	; 0x2ec <app_prime+0x4e>
			count++;
 2cc:	0f 5f       	subi	r16, 0xFF	; 255
 2ce:	1f 4f       	sbci	r17, 0xFF	; 255
			printf("%d is a prime number !!!\n", n);
 2d0:	00 d0       	rcall	.+0      	; 0x2d2 <app_prime+0x34>
 2d2:	0f 92       	push	r0
 2d4:	ed b7       	in	r30, 0x3d	; 61
 2d6:	fe b7       	in	r31, 0x3e	; 62
 2d8:	d2 82       	std	Z+2, r13	; 0x02
 2da:	c1 82       	std	Z+1, r12	; 0x01
 2dc:	d4 83       	std	Z+4, r29	; 0x04
 2de:	c3 83       	std	Z+3, r28	; 0x03
 2e0:	0e 94 c2 01 	call	0x384	; 0x384 <printf>
 2e4:	0f 90       	pop	r0
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
	return 1;
}
void app_prime(int t)
{
	int n,count = 0;
	for(n = 2; n<= t; n++){
 2ec:	21 96       	adiw	r28, 0x01	; 1
 2ee:	ec 16       	cp	r14, r28
 2f0:	fd 06       	cpc	r15, r29
 2f2:	3c f7       	brge	.-50     	; 0x2c2 <app_prime+0x24>
		if(is_prime(n)) {
			count++;
			printf("%d is a prime number !!!\n", n);
		}
	}
	printf("count=%d\n", count);
 2f4:	00 d0       	rcall	.+0      	; 0x2f6 <app_prime+0x58>
 2f6:	0f 92       	push	r0
 2f8:	88 e2       	ldi	r24, 0x28	; 40
 2fa:	92 e0       	ldi	r25, 0x02	; 2
 2fc:	ed b7       	in	r30, 0x3d	; 61
 2fe:	fe b7       	in	r31, 0x3e	; 62
 300:	92 83       	std	Z+2, r25	; 0x02
 302:	81 83       	std	Z+1, r24	; 0x01
 304:	14 83       	std	Z+4, r17	; 0x04
 306:	03 83       	std	Z+3, r16	; 0x03
 308:	0e 94 c2 01 	call	0x384	; 0x384 <printf>
 30c:	0f 90       	pop	r0
 30e:	0f 90       	pop	r0
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
}
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	1f 91       	pop	r17
 31a:	0f 91       	pop	r16
 31c:	ff 90       	pop	r15
 31e:	ef 90       	pop	r14
 320:	df 90       	pop	r13
 322:	cf 90       	pop	r12
 324:	08 95       	ret

00000326 <main>:
#include<avr/interrupt.h>
#include"uart.h"
#include"prime.h"

int main(){
	uart_init();
 326:	0e 94 e5 00 	call	0x1ca	; 0x1ca <uart_init>
	sei();
 32a:	78 94       	sei
	app_prime(2000);
 32c:	80 ed       	ldi	r24, 0xD0	; 208
 32e:	97 e0       	ldi	r25, 0x07	; 7
 330:	0e 94 4f 01 	call	0x29e	; 0x29e <app_prime>
 334:	ff cf       	rjmp	.-2      	; 0x334 <main+0xe>

00000336 <__divmodhi4>:
 336:	97 fb       	bst	r25, 7
 338:	09 2e       	mov	r0, r25
 33a:	07 26       	eor	r0, r23
 33c:	0a d0       	rcall	.+20     	; 0x352 <__divmodhi4_neg1>
 33e:	77 fd       	sbrc	r23, 7
 340:	04 d0       	rcall	.+8      	; 0x34a <__divmodhi4_neg2>
 342:	0c d0       	rcall	.+24     	; 0x35c <__udivmodhi4>
 344:	06 d0       	rcall	.+12     	; 0x352 <__divmodhi4_neg1>
 346:	00 20       	and	r0, r0
 348:	1a f4       	brpl	.+6      	; 0x350 <__divmodhi4_exit>

0000034a <__divmodhi4_neg2>:
 34a:	70 95       	com	r23
 34c:	61 95       	neg	r22
 34e:	7f 4f       	sbci	r23, 0xFF	; 255

00000350 <__divmodhi4_exit>:
 350:	08 95       	ret

00000352 <__divmodhi4_neg1>:
 352:	f6 f7       	brtc	.-4      	; 0x350 <__divmodhi4_exit>
 354:	90 95       	com	r25
 356:	81 95       	neg	r24
 358:	9f 4f       	sbci	r25, 0xFF	; 255
 35a:	08 95       	ret

0000035c <__udivmodhi4>:
 35c:	aa 1b       	sub	r26, r26
 35e:	bb 1b       	sub	r27, r27
 360:	51 e1       	ldi	r21, 0x11	; 17
 362:	07 c0       	rjmp	.+14     	; 0x372 <__udivmodhi4_ep>

00000364 <__udivmodhi4_loop>:
 364:	aa 1f       	adc	r26, r26
 366:	bb 1f       	adc	r27, r27
 368:	a6 17       	cp	r26, r22
 36a:	b7 07       	cpc	r27, r23
 36c:	10 f0       	brcs	.+4      	; 0x372 <__udivmodhi4_ep>
 36e:	a6 1b       	sub	r26, r22
 370:	b7 0b       	sbc	r27, r23

00000372 <__udivmodhi4_ep>:
 372:	88 1f       	adc	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	5a 95       	dec	r21
 378:	a9 f7       	brne	.-22     	; 0x364 <__udivmodhi4_loop>
 37a:	80 95       	com	r24
 37c:	90 95       	com	r25
 37e:	bc 01       	movw	r22, r24
 380:	cd 01       	movw	r24, r26
 382:	08 95       	ret

00000384 <printf>:
 384:	cf 93       	push	r28
 386:	df 93       	push	r29
 388:	cd b7       	in	r28, 0x3d	; 61
 38a:	de b7       	in	r29, 0x3e	; 62
 38c:	fe 01       	movw	r30, r28
 38e:	36 96       	adiw	r30, 0x06	; 6
 390:	61 91       	ld	r22, Z+
 392:	71 91       	ld	r23, Z+
 394:	80 91 37 03 	lds	r24, 0x0337
 398:	90 91 38 03 	lds	r25, 0x0338
 39c:	af 01       	movw	r20, r30
 39e:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <vfprintf>
 3a2:	df 91       	pop	r29
 3a4:	cf 91       	pop	r28
 3a6:	08 95       	ret

000003a8 <vfprintf>:
 3a8:	2f 92       	push	r2
 3aa:	3f 92       	push	r3
 3ac:	4f 92       	push	r4
 3ae:	5f 92       	push	r5
 3b0:	6f 92       	push	r6
 3b2:	7f 92       	push	r7
 3b4:	8f 92       	push	r8
 3b6:	9f 92       	push	r9
 3b8:	af 92       	push	r10
 3ba:	bf 92       	push	r11
 3bc:	cf 92       	push	r12
 3be:	df 92       	push	r13
 3c0:	ef 92       	push	r14
 3c2:	ff 92       	push	r15
 3c4:	0f 93       	push	r16
 3c6:	1f 93       	push	r17
 3c8:	cf 93       	push	r28
 3ca:	df 93       	push	r29
 3cc:	cd b7       	in	r28, 0x3d	; 61
 3ce:	de b7       	in	r29, 0x3e	; 62
 3d0:	2d 97       	sbiw	r28, 0x0d	; 13
 3d2:	0f b6       	in	r0, 0x3f	; 63
 3d4:	f8 94       	cli
 3d6:	de bf       	out	0x3e, r29	; 62
 3d8:	0f be       	out	0x3f, r0	; 63
 3da:	cd bf       	out	0x3d, r28	; 61
 3dc:	3c 01       	movw	r6, r24
 3de:	7d 87       	std	Y+13, r23	; 0x0d
 3e0:	6c 87       	std	Y+12, r22	; 0x0c
 3e2:	5a 01       	movw	r10, r20
 3e4:	fc 01       	movw	r30, r24
 3e6:	17 82       	std	Z+7, r1	; 0x07
 3e8:	16 82       	std	Z+6, r1	; 0x06
 3ea:	83 81       	ldd	r24, Z+3	; 0x03
 3ec:	81 ff       	sbrs	r24, 1
 3ee:	c8 c1       	rjmp	.+912    	; 0x780 <vfprintf+0x3d8>
 3f0:	2e 01       	movw	r4, r28
 3f2:	08 94       	sec
 3f4:	41 1c       	adc	r4, r1
 3f6:	51 1c       	adc	r5, r1
 3f8:	f3 01       	movw	r30, r6
 3fa:	93 81       	ldd	r25, Z+3	; 0x03
 3fc:	ec 85       	ldd	r30, Y+12	; 0x0c
 3fe:	fd 85       	ldd	r31, Y+13	; 0x0d
 400:	93 fd       	sbrc	r25, 3
 402:	85 91       	lpm	r24, Z+
 404:	93 ff       	sbrs	r25, 3
 406:	81 91       	ld	r24, Z+
 408:	fd 87       	std	Y+13, r31	; 0x0d
 40a:	ec 87       	std	Y+12, r30	; 0x0c
 40c:	88 23       	and	r24, r24
 40e:	09 f4       	brne	.+2      	; 0x412 <vfprintf+0x6a>
 410:	b3 c1       	rjmp	.+870    	; 0x778 <vfprintf+0x3d0>
 412:	85 32       	cpi	r24, 0x25	; 37
 414:	41 f4       	brne	.+16     	; 0x426 <vfprintf+0x7e>
 416:	93 fd       	sbrc	r25, 3
 418:	85 91       	lpm	r24, Z+
 41a:	93 ff       	sbrs	r25, 3
 41c:	81 91       	ld	r24, Z+
 41e:	fd 87       	std	Y+13, r31	; 0x0d
 420:	ec 87       	std	Y+12, r30	; 0x0c
 422:	85 32       	cpi	r24, 0x25	; 37
 424:	29 f4       	brne	.+10     	; 0x430 <vfprintf+0x88>
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	b3 01       	movw	r22, r6
 42a:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 42e:	e4 cf       	rjmp	.-56     	; 0x3f8 <vfprintf+0x50>
 430:	ff 24       	eor	r15, r15
 432:	ee 24       	eor	r14, r14
 434:	10 e0       	ldi	r17, 0x00	; 0
 436:	10 32       	cpi	r17, 0x20	; 32
 438:	b0 f4       	brcc	.+44     	; 0x466 <vfprintf+0xbe>
 43a:	8b 32       	cpi	r24, 0x2B	; 43
 43c:	69 f0       	breq	.+26     	; 0x458 <vfprintf+0xb0>
 43e:	8c 32       	cpi	r24, 0x2C	; 44
 440:	28 f4       	brcc	.+10     	; 0x44c <vfprintf+0xa4>
 442:	80 32       	cpi	r24, 0x20	; 32
 444:	51 f0       	breq	.+20     	; 0x45a <vfprintf+0xb2>
 446:	83 32       	cpi	r24, 0x23	; 35
 448:	71 f4       	brne	.+28     	; 0x466 <vfprintf+0xbe>
 44a:	0b c0       	rjmp	.+22     	; 0x462 <vfprintf+0xba>
 44c:	8d 32       	cpi	r24, 0x2D	; 45
 44e:	39 f0       	breq	.+14     	; 0x45e <vfprintf+0xb6>
 450:	80 33       	cpi	r24, 0x30	; 48
 452:	49 f4       	brne	.+18     	; 0x466 <vfprintf+0xbe>
 454:	11 60       	ori	r17, 0x01	; 1
 456:	2c c0       	rjmp	.+88     	; 0x4b0 <vfprintf+0x108>
 458:	12 60       	ori	r17, 0x02	; 2
 45a:	14 60       	ori	r17, 0x04	; 4
 45c:	29 c0       	rjmp	.+82     	; 0x4b0 <vfprintf+0x108>
 45e:	18 60       	ori	r17, 0x08	; 8
 460:	27 c0       	rjmp	.+78     	; 0x4b0 <vfprintf+0x108>
 462:	10 61       	ori	r17, 0x10	; 16
 464:	25 c0       	rjmp	.+74     	; 0x4b0 <vfprintf+0x108>
 466:	17 fd       	sbrc	r17, 7
 468:	2e c0       	rjmp	.+92     	; 0x4c6 <vfprintf+0x11e>
 46a:	28 2f       	mov	r18, r24
 46c:	20 53       	subi	r18, 0x30	; 48
 46e:	2a 30       	cpi	r18, 0x0A	; 10
 470:	98 f4       	brcc	.+38     	; 0x498 <vfprintf+0xf0>
 472:	16 ff       	sbrs	r17, 6
 474:	08 c0       	rjmp	.+16     	; 0x486 <vfprintf+0xde>
 476:	8f 2d       	mov	r24, r15
 478:	88 0f       	add	r24, r24
 47a:	f8 2e       	mov	r15, r24
 47c:	ff 0c       	add	r15, r15
 47e:	ff 0c       	add	r15, r15
 480:	f8 0e       	add	r15, r24
 482:	f2 0e       	add	r15, r18
 484:	15 c0       	rjmp	.+42     	; 0x4b0 <vfprintf+0x108>
 486:	8e 2d       	mov	r24, r14
 488:	88 0f       	add	r24, r24
 48a:	e8 2e       	mov	r14, r24
 48c:	ee 0c       	add	r14, r14
 48e:	ee 0c       	add	r14, r14
 490:	e8 0e       	add	r14, r24
 492:	e2 0e       	add	r14, r18
 494:	10 62       	ori	r17, 0x20	; 32
 496:	0c c0       	rjmp	.+24     	; 0x4b0 <vfprintf+0x108>
 498:	8e 32       	cpi	r24, 0x2E	; 46
 49a:	21 f4       	brne	.+8      	; 0x4a4 <vfprintf+0xfc>
 49c:	16 fd       	sbrc	r17, 6
 49e:	6c c1       	rjmp	.+728    	; 0x778 <vfprintf+0x3d0>
 4a0:	10 64       	ori	r17, 0x40	; 64
 4a2:	06 c0       	rjmp	.+12     	; 0x4b0 <vfprintf+0x108>
 4a4:	8c 36       	cpi	r24, 0x6C	; 108
 4a6:	11 f4       	brne	.+4      	; 0x4ac <vfprintf+0x104>
 4a8:	10 68       	ori	r17, 0x80	; 128
 4aa:	02 c0       	rjmp	.+4      	; 0x4b0 <vfprintf+0x108>
 4ac:	88 36       	cpi	r24, 0x68	; 104
 4ae:	59 f4       	brne	.+22     	; 0x4c6 <vfprintf+0x11e>
 4b0:	ec 85       	ldd	r30, Y+12	; 0x0c
 4b2:	fd 85       	ldd	r31, Y+13	; 0x0d
 4b4:	93 fd       	sbrc	r25, 3
 4b6:	85 91       	lpm	r24, Z+
 4b8:	93 ff       	sbrs	r25, 3
 4ba:	81 91       	ld	r24, Z+
 4bc:	fd 87       	std	Y+13, r31	; 0x0d
 4be:	ec 87       	std	Y+12, r30	; 0x0c
 4c0:	88 23       	and	r24, r24
 4c2:	09 f0       	breq	.+2      	; 0x4c6 <vfprintf+0x11e>
 4c4:	b8 cf       	rjmp	.-144    	; 0x436 <vfprintf+0x8e>
 4c6:	98 2f       	mov	r25, r24
 4c8:	95 54       	subi	r25, 0x45	; 69
 4ca:	93 30       	cpi	r25, 0x03	; 3
 4cc:	18 f0       	brcs	.+6      	; 0x4d4 <vfprintf+0x12c>
 4ce:	90 52       	subi	r25, 0x20	; 32
 4d0:	93 30       	cpi	r25, 0x03	; 3
 4d2:	38 f4       	brcc	.+14     	; 0x4e2 <vfprintf+0x13a>
 4d4:	24 e0       	ldi	r18, 0x04	; 4
 4d6:	30 e0       	ldi	r19, 0x00	; 0
 4d8:	a2 0e       	add	r10, r18
 4da:	b3 1e       	adc	r11, r19
 4dc:	3f e3       	ldi	r19, 0x3F	; 63
 4de:	39 83       	std	Y+1, r19	; 0x01
 4e0:	0f c0       	rjmp	.+30     	; 0x500 <vfprintf+0x158>
 4e2:	83 36       	cpi	r24, 0x63	; 99
 4e4:	31 f0       	breq	.+12     	; 0x4f2 <vfprintf+0x14a>
 4e6:	83 37       	cpi	r24, 0x73	; 115
 4e8:	81 f0       	breq	.+32     	; 0x50a <vfprintf+0x162>
 4ea:	83 35       	cpi	r24, 0x53	; 83
 4ec:	09 f0       	breq	.+2      	; 0x4f0 <vfprintf+0x148>
 4ee:	5a c0       	rjmp	.+180    	; 0x5a4 <vfprintf+0x1fc>
 4f0:	22 c0       	rjmp	.+68     	; 0x536 <vfprintf+0x18e>
 4f2:	f5 01       	movw	r30, r10
 4f4:	80 81       	ld	r24, Z
 4f6:	89 83       	std	Y+1, r24	; 0x01
 4f8:	22 e0       	ldi	r18, 0x02	; 2
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	a2 0e       	add	r10, r18
 4fe:	b3 1e       	adc	r11, r19
 500:	21 e0       	ldi	r18, 0x01	; 1
 502:	c2 2e       	mov	r12, r18
 504:	d1 2c       	mov	r13, r1
 506:	42 01       	movw	r8, r4
 508:	14 c0       	rjmp	.+40     	; 0x532 <vfprintf+0x18a>
 50a:	92 e0       	ldi	r25, 0x02	; 2
 50c:	29 2e       	mov	r2, r25
 50e:	31 2c       	mov	r3, r1
 510:	2a 0c       	add	r2, r10
 512:	3b 1c       	adc	r3, r11
 514:	f5 01       	movw	r30, r10
 516:	80 80       	ld	r8, Z
 518:	91 80       	ldd	r9, Z+1	; 0x01
 51a:	16 ff       	sbrs	r17, 6
 51c:	03 c0       	rjmp	.+6      	; 0x524 <vfprintf+0x17c>
 51e:	6f 2d       	mov	r22, r15
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	02 c0       	rjmp	.+4      	; 0x528 <vfprintf+0x180>
 524:	6f ef       	ldi	r22, 0xFF	; 255
 526:	7f ef       	ldi	r23, 0xFF	; 255
 528:	c4 01       	movw	r24, r8
 52a:	0e 94 e6 03 	call	0x7cc	; 0x7cc <strnlen>
 52e:	6c 01       	movw	r12, r24
 530:	51 01       	movw	r10, r2
 532:	1f 77       	andi	r17, 0x7F	; 127
 534:	15 c0       	rjmp	.+42     	; 0x560 <vfprintf+0x1b8>
 536:	82 e0       	ldi	r24, 0x02	; 2
 538:	28 2e       	mov	r2, r24
 53a:	31 2c       	mov	r3, r1
 53c:	2a 0c       	add	r2, r10
 53e:	3b 1c       	adc	r3, r11
 540:	f5 01       	movw	r30, r10
 542:	80 80       	ld	r8, Z
 544:	91 80       	ldd	r9, Z+1	; 0x01
 546:	16 ff       	sbrs	r17, 6
 548:	03 c0       	rjmp	.+6      	; 0x550 <vfprintf+0x1a8>
 54a:	6f 2d       	mov	r22, r15
 54c:	70 e0       	ldi	r23, 0x00	; 0
 54e:	02 c0       	rjmp	.+4      	; 0x554 <vfprintf+0x1ac>
 550:	6f ef       	ldi	r22, 0xFF	; 255
 552:	7f ef       	ldi	r23, 0xFF	; 255
 554:	c4 01       	movw	r24, r8
 556:	0e 94 db 03 	call	0x7b6	; 0x7b6 <strnlen_P>
 55a:	6c 01       	movw	r12, r24
 55c:	10 68       	ori	r17, 0x80	; 128
 55e:	51 01       	movw	r10, r2
 560:	13 fd       	sbrc	r17, 3
 562:	1c c0       	rjmp	.+56     	; 0x59c <vfprintf+0x1f4>
 564:	06 c0       	rjmp	.+12     	; 0x572 <vfprintf+0x1ca>
 566:	80 e2       	ldi	r24, 0x20	; 32
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	b3 01       	movw	r22, r6
 56c:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 570:	ea 94       	dec	r14
 572:	8e 2d       	mov	r24, r14
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	c8 16       	cp	r12, r24
 578:	d9 06       	cpc	r13, r25
 57a:	a8 f3       	brcs	.-22     	; 0x566 <vfprintf+0x1be>
 57c:	0f c0       	rjmp	.+30     	; 0x59c <vfprintf+0x1f4>
 57e:	f4 01       	movw	r30, r8
 580:	17 fd       	sbrc	r17, 7
 582:	85 91       	lpm	r24, Z+
 584:	17 ff       	sbrs	r17, 7
 586:	81 91       	ld	r24, Z+
 588:	4f 01       	movw	r8, r30
 58a:	90 e0       	ldi	r25, 0x00	; 0
 58c:	b3 01       	movw	r22, r6
 58e:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 592:	e1 10       	cpse	r14, r1
 594:	ea 94       	dec	r14
 596:	08 94       	sec
 598:	c1 08       	sbc	r12, r1
 59a:	d1 08       	sbc	r13, r1
 59c:	c1 14       	cp	r12, r1
 59e:	d1 04       	cpc	r13, r1
 5a0:	71 f7       	brne	.-36     	; 0x57e <vfprintf+0x1d6>
 5a2:	e7 c0       	rjmp	.+462    	; 0x772 <vfprintf+0x3ca>
 5a4:	84 36       	cpi	r24, 0x64	; 100
 5a6:	11 f0       	breq	.+4      	; 0x5ac <vfprintf+0x204>
 5a8:	89 36       	cpi	r24, 0x69	; 105
 5aa:	51 f5       	brne	.+84     	; 0x600 <vfprintf+0x258>
 5ac:	f5 01       	movw	r30, r10
 5ae:	17 ff       	sbrs	r17, 7
 5b0:	07 c0       	rjmp	.+14     	; 0x5c0 <vfprintf+0x218>
 5b2:	80 81       	ld	r24, Z
 5b4:	91 81       	ldd	r25, Z+1	; 0x01
 5b6:	a2 81       	ldd	r26, Z+2	; 0x02
 5b8:	b3 81       	ldd	r27, Z+3	; 0x03
 5ba:	24 e0       	ldi	r18, 0x04	; 4
 5bc:	30 e0       	ldi	r19, 0x00	; 0
 5be:	08 c0       	rjmp	.+16     	; 0x5d0 <vfprintf+0x228>
 5c0:	80 81       	ld	r24, Z
 5c2:	91 81       	ldd	r25, Z+1	; 0x01
 5c4:	aa 27       	eor	r26, r26
 5c6:	97 fd       	sbrc	r25, 7
 5c8:	a0 95       	com	r26
 5ca:	ba 2f       	mov	r27, r26
 5cc:	22 e0       	ldi	r18, 0x02	; 2
 5ce:	30 e0       	ldi	r19, 0x00	; 0
 5d0:	a2 0e       	add	r10, r18
 5d2:	b3 1e       	adc	r11, r19
 5d4:	01 2f       	mov	r16, r17
 5d6:	0f 76       	andi	r16, 0x6F	; 111
 5d8:	b7 ff       	sbrs	r27, 7
 5da:	08 c0       	rjmp	.+16     	; 0x5ec <vfprintf+0x244>
 5dc:	b0 95       	com	r27
 5de:	a0 95       	com	r26
 5e0:	90 95       	com	r25
 5e2:	81 95       	neg	r24
 5e4:	9f 4f       	sbci	r25, 0xFF	; 255
 5e6:	af 4f       	sbci	r26, 0xFF	; 255
 5e8:	bf 4f       	sbci	r27, 0xFF	; 255
 5ea:	00 68       	ori	r16, 0x80	; 128
 5ec:	bc 01       	movw	r22, r24
 5ee:	cd 01       	movw	r24, r26
 5f0:	a2 01       	movw	r20, r4
 5f2:	2a e0       	ldi	r18, 0x0A	; 10
 5f4:	30 e0       	ldi	r19, 0x00	; 0
 5f6:	0e 94 1d 04 	call	0x83a	; 0x83a <__ultoa_invert>
 5fa:	d8 2e       	mov	r13, r24
 5fc:	d4 18       	sub	r13, r4
 5fe:	3f c0       	rjmp	.+126    	; 0x67e <vfprintf+0x2d6>
 600:	85 37       	cpi	r24, 0x75	; 117
 602:	21 f4       	brne	.+8      	; 0x60c <vfprintf+0x264>
 604:	1f 7e       	andi	r17, 0xEF	; 239
 606:	2a e0       	ldi	r18, 0x0A	; 10
 608:	30 e0       	ldi	r19, 0x00	; 0
 60a:	20 c0       	rjmp	.+64     	; 0x64c <vfprintf+0x2a4>
 60c:	19 7f       	andi	r17, 0xF9	; 249
 60e:	8f 36       	cpi	r24, 0x6F	; 111
 610:	a9 f0       	breq	.+42     	; 0x63c <vfprintf+0x294>
 612:	80 37       	cpi	r24, 0x70	; 112
 614:	20 f4       	brcc	.+8      	; 0x61e <vfprintf+0x276>
 616:	88 35       	cpi	r24, 0x58	; 88
 618:	09 f0       	breq	.+2      	; 0x61c <vfprintf+0x274>
 61a:	ae c0       	rjmp	.+348    	; 0x778 <vfprintf+0x3d0>
 61c:	0b c0       	rjmp	.+22     	; 0x634 <vfprintf+0x28c>
 61e:	80 37       	cpi	r24, 0x70	; 112
 620:	21 f0       	breq	.+8      	; 0x62a <vfprintf+0x282>
 622:	88 37       	cpi	r24, 0x78	; 120
 624:	09 f0       	breq	.+2      	; 0x628 <vfprintf+0x280>
 626:	a8 c0       	rjmp	.+336    	; 0x778 <vfprintf+0x3d0>
 628:	01 c0       	rjmp	.+2      	; 0x62c <vfprintf+0x284>
 62a:	10 61       	ori	r17, 0x10	; 16
 62c:	14 ff       	sbrs	r17, 4
 62e:	09 c0       	rjmp	.+18     	; 0x642 <vfprintf+0x29a>
 630:	14 60       	ori	r17, 0x04	; 4
 632:	07 c0       	rjmp	.+14     	; 0x642 <vfprintf+0x29a>
 634:	14 ff       	sbrs	r17, 4
 636:	08 c0       	rjmp	.+16     	; 0x648 <vfprintf+0x2a0>
 638:	16 60       	ori	r17, 0x06	; 6
 63a:	06 c0       	rjmp	.+12     	; 0x648 <vfprintf+0x2a0>
 63c:	28 e0       	ldi	r18, 0x08	; 8
 63e:	30 e0       	ldi	r19, 0x00	; 0
 640:	05 c0       	rjmp	.+10     	; 0x64c <vfprintf+0x2a4>
 642:	20 e1       	ldi	r18, 0x10	; 16
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	02 c0       	rjmp	.+4      	; 0x64c <vfprintf+0x2a4>
 648:	20 e1       	ldi	r18, 0x10	; 16
 64a:	32 e0       	ldi	r19, 0x02	; 2
 64c:	f5 01       	movw	r30, r10
 64e:	17 ff       	sbrs	r17, 7
 650:	07 c0       	rjmp	.+14     	; 0x660 <vfprintf+0x2b8>
 652:	60 81       	ld	r22, Z
 654:	71 81       	ldd	r23, Z+1	; 0x01
 656:	82 81       	ldd	r24, Z+2	; 0x02
 658:	93 81       	ldd	r25, Z+3	; 0x03
 65a:	44 e0       	ldi	r20, 0x04	; 4
 65c:	50 e0       	ldi	r21, 0x00	; 0
 65e:	06 c0       	rjmp	.+12     	; 0x66c <vfprintf+0x2c4>
 660:	60 81       	ld	r22, Z
 662:	71 81       	ldd	r23, Z+1	; 0x01
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	42 e0       	ldi	r20, 0x02	; 2
 66a:	50 e0       	ldi	r21, 0x00	; 0
 66c:	a4 0e       	add	r10, r20
 66e:	b5 1e       	adc	r11, r21
 670:	a2 01       	movw	r20, r4
 672:	0e 94 1d 04 	call	0x83a	; 0x83a <__ultoa_invert>
 676:	d8 2e       	mov	r13, r24
 678:	d4 18       	sub	r13, r4
 67a:	01 2f       	mov	r16, r17
 67c:	0f 77       	andi	r16, 0x7F	; 127
 67e:	06 ff       	sbrs	r16, 6
 680:	09 c0       	rjmp	.+18     	; 0x694 <vfprintf+0x2ec>
 682:	0e 7f       	andi	r16, 0xFE	; 254
 684:	df 14       	cp	r13, r15
 686:	30 f4       	brcc	.+12     	; 0x694 <vfprintf+0x2ec>
 688:	04 ff       	sbrs	r16, 4
 68a:	06 c0       	rjmp	.+12     	; 0x698 <vfprintf+0x2f0>
 68c:	02 fd       	sbrc	r16, 2
 68e:	04 c0       	rjmp	.+8      	; 0x698 <vfprintf+0x2f0>
 690:	0f 7e       	andi	r16, 0xEF	; 239
 692:	02 c0       	rjmp	.+4      	; 0x698 <vfprintf+0x2f0>
 694:	1d 2d       	mov	r17, r13
 696:	01 c0       	rjmp	.+2      	; 0x69a <vfprintf+0x2f2>
 698:	1f 2d       	mov	r17, r15
 69a:	80 2f       	mov	r24, r16
 69c:	90 e0       	ldi	r25, 0x00	; 0
 69e:	04 ff       	sbrs	r16, 4
 6a0:	0c c0       	rjmp	.+24     	; 0x6ba <vfprintf+0x312>
 6a2:	fe 01       	movw	r30, r28
 6a4:	ed 0d       	add	r30, r13
 6a6:	f1 1d       	adc	r31, r1
 6a8:	20 81       	ld	r18, Z
 6aa:	20 33       	cpi	r18, 0x30	; 48
 6ac:	11 f4       	brne	.+4      	; 0x6b2 <vfprintf+0x30a>
 6ae:	09 7e       	andi	r16, 0xE9	; 233
 6b0:	09 c0       	rjmp	.+18     	; 0x6c4 <vfprintf+0x31c>
 6b2:	02 ff       	sbrs	r16, 2
 6b4:	06 c0       	rjmp	.+12     	; 0x6c2 <vfprintf+0x31a>
 6b6:	1e 5f       	subi	r17, 0xFE	; 254
 6b8:	05 c0       	rjmp	.+10     	; 0x6c4 <vfprintf+0x31c>
 6ba:	86 78       	andi	r24, 0x86	; 134
 6bc:	90 70       	andi	r25, 0x00	; 0
 6be:	00 97       	sbiw	r24, 0x00	; 0
 6c0:	09 f0       	breq	.+2      	; 0x6c4 <vfprintf+0x31c>
 6c2:	1f 5f       	subi	r17, 0xFF	; 255
 6c4:	80 2e       	mov	r8, r16
 6c6:	99 24       	eor	r9, r9
 6c8:	03 fd       	sbrc	r16, 3
 6ca:	12 c0       	rjmp	.+36     	; 0x6f0 <vfprintf+0x348>
 6cc:	00 ff       	sbrs	r16, 0
 6ce:	0d c0       	rjmp	.+26     	; 0x6ea <vfprintf+0x342>
 6d0:	fd 2c       	mov	r15, r13
 6d2:	1e 15       	cp	r17, r14
 6d4:	50 f4       	brcc	.+20     	; 0x6ea <vfprintf+0x342>
 6d6:	fe 0c       	add	r15, r14
 6d8:	f1 1a       	sub	r15, r17
 6da:	1e 2d       	mov	r17, r14
 6dc:	06 c0       	rjmp	.+12     	; 0x6ea <vfprintf+0x342>
 6de:	80 e2       	ldi	r24, 0x20	; 32
 6e0:	90 e0       	ldi	r25, 0x00	; 0
 6e2:	b3 01       	movw	r22, r6
 6e4:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 6e8:	1f 5f       	subi	r17, 0xFF	; 255
 6ea:	1e 15       	cp	r17, r14
 6ec:	c0 f3       	brcs	.-16     	; 0x6de <vfprintf+0x336>
 6ee:	04 c0       	rjmp	.+8      	; 0x6f8 <vfprintf+0x350>
 6f0:	1e 15       	cp	r17, r14
 6f2:	10 f4       	brcc	.+4      	; 0x6f8 <vfprintf+0x350>
 6f4:	e1 1a       	sub	r14, r17
 6f6:	01 c0       	rjmp	.+2      	; 0x6fa <vfprintf+0x352>
 6f8:	ee 24       	eor	r14, r14
 6fa:	84 fe       	sbrs	r8, 4
 6fc:	0f c0       	rjmp	.+30     	; 0x71c <vfprintf+0x374>
 6fe:	80 e3       	ldi	r24, 0x30	; 48
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	b3 01       	movw	r22, r6
 704:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 708:	82 fe       	sbrs	r8, 2
 70a:	1f c0       	rjmp	.+62     	; 0x74a <vfprintf+0x3a2>
 70c:	81 fe       	sbrs	r8, 1
 70e:	03 c0       	rjmp	.+6      	; 0x716 <vfprintf+0x36e>
 710:	88 e5       	ldi	r24, 0x58	; 88
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	10 c0       	rjmp	.+32     	; 0x736 <vfprintf+0x38e>
 716:	88 e7       	ldi	r24, 0x78	; 120
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	0d c0       	rjmp	.+26     	; 0x736 <vfprintf+0x38e>
 71c:	c4 01       	movw	r24, r8
 71e:	86 78       	andi	r24, 0x86	; 134
 720:	90 70       	andi	r25, 0x00	; 0
 722:	00 97       	sbiw	r24, 0x00	; 0
 724:	91 f0       	breq	.+36     	; 0x74a <vfprintf+0x3a2>
 726:	81 fc       	sbrc	r8, 1
 728:	02 c0       	rjmp	.+4      	; 0x72e <vfprintf+0x386>
 72a:	80 e2       	ldi	r24, 0x20	; 32
 72c:	01 c0       	rjmp	.+2      	; 0x730 <vfprintf+0x388>
 72e:	8b e2       	ldi	r24, 0x2B	; 43
 730:	07 fd       	sbrc	r16, 7
 732:	8d e2       	ldi	r24, 0x2D	; 45
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	b3 01       	movw	r22, r6
 738:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 73c:	06 c0       	rjmp	.+12     	; 0x74a <vfprintf+0x3a2>
 73e:	80 e3       	ldi	r24, 0x30	; 48
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	b3 01       	movw	r22, r6
 744:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 748:	fa 94       	dec	r15
 74a:	df 14       	cp	r13, r15
 74c:	c0 f3       	brcs	.-16     	; 0x73e <vfprintf+0x396>
 74e:	da 94       	dec	r13
 750:	f2 01       	movw	r30, r4
 752:	ed 0d       	add	r30, r13
 754:	f1 1d       	adc	r31, r1
 756:	80 81       	ld	r24, Z
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	b3 01       	movw	r22, r6
 75c:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 760:	dd 20       	and	r13, r13
 762:	a9 f7       	brne	.-22     	; 0x74e <vfprintf+0x3a6>
 764:	06 c0       	rjmp	.+12     	; 0x772 <vfprintf+0x3ca>
 766:	80 e2       	ldi	r24, 0x20	; 32
 768:	90 e0       	ldi	r25, 0x00	; 0
 76a:	b3 01       	movw	r22, r6
 76c:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <fputc>
 770:	ea 94       	dec	r14
 772:	ee 20       	and	r14, r14
 774:	c1 f7       	brne	.-16     	; 0x766 <vfprintf+0x3be>
 776:	40 ce       	rjmp	.-896    	; 0x3f8 <vfprintf+0x50>
 778:	f3 01       	movw	r30, r6
 77a:	86 81       	ldd	r24, Z+6	; 0x06
 77c:	97 81       	ldd	r25, Z+7	; 0x07
 77e:	02 c0       	rjmp	.+4      	; 0x784 <vfprintf+0x3dc>
 780:	8f ef       	ldi	r24, 0xFF	; 255
 782:	9f ef       	ldi	r25, 0xFF	; 255
 784:	2d 96       	adiw	r28, 0x0d	; 13
 786:	0f b6       	in	r0, 0x3f	; 63
 788:	f8 94       	cli
 78a:	de bf       	out	0x3e, r29	; 62
 78c:	0f be       	out	0x3f, r0	; 63
 78e:	cd bf       	out	0x3d, r28	; 61
 790:	df 91       	pop	r29
 792:	cf 91       	pop	r28
 794:	1f 91       	pop	r17
 796:	0f 91       	pop	r16
 798:	ff 90       	pop	r15
 79a:	ef 90       	pop	r14
 79c:	df 90       	pop	r13
 79e:	cf 90       	pop	r12
 7a0:	bf 90       	pop	r11
 7a2:	af 90       	pop	r10
 7a4:	9f 90       	pop	r9
 7a6:	8f 90       	pop	r8
 7a8:	7f 90       	pop	r7
 7aa:	6f 90       	pop	r6
 7ac:	5f 90       	pop	r5
 7ae:	4f 90       	pop	r4
 7b0:	3f 90       	pop	r3
 7b2:	2f 90       	pop	r2
 7b4:	08 95       	ret

000007b6 <strnlen_P>:
 7b6:	fc 01       	movw	r30, r24
 7b8:	05 90       	lpm	r0, Z+
 7ba:	61 50       	subi	r22, 0x01	; 1
 7bc:	70 40       	sbci	r23, 0x00	; 0
 7be:	01 10       	cpse	r0, r1
 7c0:	d8 f7       	brcc	.-10     	; 0x7b8 <strnlen_P+0x2>
 7c2:	80 95       	com	r24
 7c4:	90 95       	com	r25
 7c6:	8e 0f       	add	r24, r30
 7c8:	9f 1f       	adc	r25, r31
 7ca:	08 95       	ret

000007cc <strnlen>:
 7cc:	fc 01       	movw	r30, r24
 7ce:	61 50       	subi	r22, 0x01	; 1
 7d0:	70 40       	sbci	r23, 0x00	; 0
 7d2:	01 90       	ld	r0, Z+
 7d4:	01 10       	cpse	r0, r1
 7d6:	d8 f7       	brcc	.-10     	; 0x7ce <strnlen+0x2>
 7d8:	80 95       	com	r24
 7da:	90 95       	com	r25
 7dc:	8e 0f       	add	r24, r30
 7de:	9f 1f       	adc	r25, r31
 7e0:	08 95       	ret

000007e2 <fputc>:
 7e2:	0f 93       	push	r16
 7e4:	1f 93       	push	r17
 7e6:	cf 93       	push	r28
 7e8:	df 93       	push	r29
 7ea:	8c 01       	movw	r16, r24
 7ec:	eb 01       	movw	r28, r22
 7ee:	8b 81       	ldd	r24, Y+3	; 0x03
 7f0:	81 ff       	sbrs	r24, 1
 7f2:	1b c0       	rjmp	.+54     	; 0x82a <fputc+0x48>
 7f4:	82 ff       	sbrs	r24, 2
 7f6:	0d c0       	rjmp	.+26     	; 0x812 <fputc+0x30>
 7f8:	2e 81       	ldd	r18, Y+6	; 0x06
 7fa:	3f 81       	ldd	r19, Y+7	; 0x07
 7fc:	8c 81       	ldd	r24, Y+4	; 0x04
 7fe:	9d 81       	ldd	r25, Y+5	; 0x05
 800:	28 17       	cp	r18, r24
 802:	39 07       	cpc	r19, r25
 804:	64 f4       	brge	.+24     	; 0x81e <fputc+0x3c>
 806:	e8 81       	ld	r30, Y
 808:	f9 81       	ldd	r31, Y+1	; 0x01
 80a:	01 93       	st	Z+, r16
 80c:	f9 83       	std	Y+1, r31	; 0x01
 80e:	e8 83       	st	Y, r30
 810:	06 c0       	rjmp	.+12     	; 0x81e <fputc+0x3c>
 812:	e8 85       	ldd	r30, Y+8	; 0x08
 814:	f9 85       	ldd	r31, Y+9	; 0x09
 816:	80 2f       	mov	r24, r16
 818:	19 95       	eicall
 81a:	00 97       	sbiw	r24, 0x00	; 0
 81c:	31 f4       	brne	.+12     	; 0x82a <fputc+0x48>
 81e:	8e 81       	ldd	r24, Y+6	; 0x06
 820:	9f 81       	ldd	r25, Y+7	; 0x07
 822:	01 96       	adiw	r24, 0x01	; 1
 824:	9f 83       	std	Y+7, r25	; 0x07
 826:	8e 83       	std	Y+6, r24	; 0x06
 828:	02 c0       	rjmp	.+4      	; 0x82e <fputc+0x4c>
 82a:	0f ef       	ldi	r16, 0xFF	; 255
 82c:	1f ef       	ldi	r17, 0xFF	; 255
 82e:	c8 01       	movw	r24, r16
 830:	df 91       	pop	r29
 832:	cf 91       	pop	r28
 834:	1f 91       	pop	r17
 836:	0f 91       	pop	r16
 838:	08 95       	ret

0000083a <__ultoa_invert>:
 83a:	fa 01       	movw	r30, r20
 83c:	aa 27       	eor	r26, r26
 83e:	28 30       	cpi	r18, 0x08	; 8
 840:	51 f1       	breq	.+84     	; 0x896 <__ultoa_invert+0x5c>
 842:	20 31       	cpi	r18, 0x10	; 16
 844:	81 f1       	breq	.+96     	; 0x8a6 <__ultoa_invert+0x6c>
 846:	e8 94       	clt
 848:	6f 93       	push	r22
 84a:	6e 7f       	andi	r22, 0xFE	; 254
 84c:	6e 5f       	subi	r22, 0xFE	; 254
 84e:	7f 4f       	sbci	r23, 0xFF	; 255
 850:	8f 4f       	sbci	r24, 0xFF	; 255
 852:	9f 4f       	sbci	r25, 0xFF	; 255
 854:	af 4f       	sbci	r26, 0xFF	; 255
 856:	b1 e0       	ldi	r27, 0x01	; 1
 858:	3e d0       	rcall	.+124    	; 0x8d6 <__ultoa_invert+0x9c>
 85a:	b4 e0       	ldi	r27, 0x04	; 4
 85c:	3c d0       	rcall	.+120    	; 0x8d6 <__ultoa_invert+0x9c>
 85e:	67 0f       	add	r22, r23
 860:	78 1f       	adc	r23, r24
 862:	89 1f       	adc	r24, r25
 864:	9a 1f       	adc	r25, r26
 866:	a1 1d       	adc	r26, r1
 868:	68 0f       	add	r22, r24
 86a:	79 1f       	adc	r23, r25
 86c:	8a 1f       	adc	r24, r26
 86e:	91 1d       	adc	r25, r1
 870:	a1 1d       	adc	r26, r1
 872:	6a 0f       	add	r22, r26
 874:	71 1d       	adc	r23, r1
 876:	81 1d       	adc	r24, r1
 878:	91 1d       	adc	r25, r1
 87a:	a1 1d       	adc	r26, r1
 87c:	20 d0       	rcall	.+64     	; 0x8be <__ultoa_invert+0x84>
 87e:	09 f4       	brne	.+2      	; 0x882 <__ultoa_invert+0x48>
 880:	68 94       	set
 882:	3f 91       	pop	r19
 884:	2a e0       	ldi	r18, 0x0A	; 10
 886:	26 9f       	mul	r18, r22
 888:	11 24       	eor	r1, r1
 88a:	30 19       	sub	r19, r0
 88c:	30 5d       	subi	r19, 0xD0	; 208
 88e:	31 93       	st	Z+, r19
 890:	de f6       	brtc	.-74     	; 0x848 <__ultoa_invert+0xe>
 892:	cf 01       	movw	r24, r30
 894:	08 95       	ret
 896:	46 2f       	mov	r20, r22
 898:	47 70       	andi	r20, 0x07	; 7
 89a:	40 5d       	subi	r20, 0xD0	; 208
 89c:	41 93       	st	Z+, r20
 89e:	b3 e0       	ldi	r27, 0x03	; 3
 8a0:	0f d0       	rcall	.+30     	; 0x8c0 <__ultoa_invert+0x86>
 8a2:	c9 f7       	brne	.-14     	; 0x896 <__ultoa_invert+0x5c>
 8a4:	f6 cf       	rjmp	.-20     	; 0x892 <__ultoa_invert+0x58>
 8a6:	46 2f       	mov	r20, r22
 8a8:	4f 70       	andi	r20, 0x0F	; 15
 8aa:	40 5d       	subi	r20, 0xD0	; 208
 8ac:	4a 33       	cpi	r20, 0x3A	; 58
 8ae:	18 f0       	brcs	.+6      	; 0x8b6 <__ultoa_invert+0x7c>
 8b0:	49 5d       	subi	r20, 0xD9	; 217
 8b2:	31 fd       	sbrc	r19, 1
 8b4:	40 52       	subi	r20, 0x20	; 32
 8b6:	41 93       	st	Z+, r20
 8b8:	02 d0       	rcall	.+4      	; 0x8be <__ultoa_invert+0x84>
 8ba:	a9 f7       	brne	.-22     	; 0x8a6 <__ultoa_invert+0x6c>
 8bc:	ea cf       	rjmp	.-44     	; 0x892 <__ultoa_invert+0x58>
 8be:	b4 e0       	ldi	r27, 0x04	; 4
 8c0:	a6 95       	lsr	r26
 8c2:	97 95       	ror	r25
 8c4:	87 95       	ror	r24
 8c6:	77 95       	ror	r23
 8c8:	67 95       	ror	r22
 8ca:	ba 95       	dec	r27
 8cc:	c9 f7       	brne	.-14     	; 0x8c0 <__ultoa_invert+0x86>
 8ce:	00 97       	sbiw	r24, 0x00	; 0
 8d0:	61 05       	cpc	r22, r1
 8d2:	71 05       	cpc	r23, r1
 8d4:	08 95       	ret
 8d6:	9b 01       	movw	r18, r22
 8d8:	ac 01       	movw	r20, r24
 8da:	0a 2e       	mov	r0, r26
 8dc:	06 94       	lsr	r0
 8de:	57 95       	ror	r21
 8e0:	47 95       	ror	r20
 8e2:	37 95       	ror	r19
 8e4:	27 95       	ror	r18
 8e6:	ba 95       	dec	r27
 8e8:	c9 f7       	brne	.-14     	; 0x8dc <__ultoa_invert+0xa2>
 8ea:	62 0f       	add	r22, r18
 8ec:	73 1f       	adc	r23, r19
 8ee:	84 1f       	adc	r24, r20
 8f0:	95 1f       	adc	r25, r21
 8f2:	a0 1d       	adc	r26, r0
 8f4:	08 95       	ret

000008f6 <_exit>:
 8f6:	f8 94       	cli

000008f8 <__stop_program>:
 8f8:	ff cf       	rjmp	.-2      	; 0x8f8 <__stop_program>
